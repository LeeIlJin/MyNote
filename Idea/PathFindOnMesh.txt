내 나름대로 NavMesh 와 비슷하게 나오도록 구상해보았다.

Initialize
1. 장애물들의 주위에 정점을 생성하여 객체가 다닐 수 있는 영역에 대한 Mesh를 만든다.
2. Mesh의 정점들 중 주변 정점들과의 내각이 180도 이상인 정점을 코너 포인트로 저장한다.
3. 각 코너 포인트끼리 선분을 이어서 Mesh의 모든 선분과 충돌하는지 검사를 하고 충돌을 하지 않는다면 충돌하지 않은 선분의 두 코너 포인트를 링크한다.
링크가 의미하는 것은 두 포인트들끼리는 직선으로 바로 이동이 가능하다는것을 의미한다.
4. 위 과정들로 생긴 데이터들을 가리켜 NavMesh 라고 한다.

Finding Path
1. 시작 포인트는 일종의 코너 포인트로 저장하며 각 코너 포인트와 선분을 이었을때 Mesh의 모든 선분과 충돌하는지 검사를 하고 충돌을 하지 않는 코너 포인트들을 시작 코너 포인트와 링크한다.
2. 도착 포인트 또한 시작 포인트와 똑같은 작업으로 코너포인트를 링크시킨다.
3. 모든 코너 포인트들을 노드로 A*알고리즘을 수행한다. weight는 거리가 된다.
4. 경로를 코너포인트들의 집합으로 뽑아낸다.

머릿속에서 코드들을 짜고 시뮬레이션 하면서 구상해봤다.
나름 기존의 NavMesh의 동작 결과물을 모방하려고 했다.

이걸 구상하게 된 계기는 회사에서 사용중인 길찾기 알고리즘(A* 기반)이 너무 비효율적이고 이상하게 짜여져있어서
그냥 문득 생각나서... 머리 굴리는 훈련도 하는겸..
